const{invoke:invoke}=window.__TAURI__.tauri,INVALID_DATA_MESSAGE="Invalid data",LOADING_TEXT="Loading...",DEFAULT_SHUTDOWN_TIME="19:00",STOP_TIME="STOP",SUCCESSFUL_MESSAGE="SUCCESSFUL",SHUTDOWN_CLOCK_ID="plugin:general|get_shutdown_clock",SHUTDOWN_STATE_ID="plugin:general|get_shutdown_state",SET_SHUTDOWN_ID="plugin:general|set_shutdown",SET_FORCE_INTERVAL_ID="plugin:general|set_force_interval",SET_REGISTRY_STATE_ID="plugin:general|set_registry_state",GET_STATE_ID="plugin:general|get_state",DEFAULT_MINIMUM_INTERVAL=60,DOM_ELEMENTS={clockValue:document.getElementById("timed-input"),clockStatus:document.getElementById("timed-stop"),intervalData:document.getElementById("interval-data"),submitIntervalBtn:document.getElementById("submit-interval-btn")},refreshTableList=[["current-interval","plugin:general|get_data","force_interval"],["last-input","plugin:general|get_data","robot_input"]];function refreshStatsTable(){Promise.all(refreshTableList.map(refreshTableElement))}function refreshTableElement(e){let t;document.getElementById(e[0]).innerText="Loading...",t=void 0!==e[2]?invoke(e[1],{data:e[2]}):invoke(e[1]),t.then((t=>{document.getElementById(e[0]).innerText=t}))}async function update_interval(){const e=DOM_ELEMENTS.intervalData;isNaN(e.value)||e.value<60?(e.placeholder="Invalid data",e.value=""):(invoke(SET_FORCE_INTERVAL_ID,{interval:e.value}),e.placeholder="SUCCESSFUL",e.value="",refreshStatsTable())}window.addEventListener("DOMContentLoaded",(()=>{refreshStatsTable(),invoke(SHUTDOWN_CLOCK_ID,{}).then((e=>DOM_ELEMENTS.clockValue.value=e)),invoke(SHUTDOWN_STATE_ID,{}).then((e=>DOM_ELEMENTS.clockStatus.checked=e))})),DOM_ELEMENTS.clockValue.addEventListener("change",(()=>{const e=DOM_ELEMENTS.clockValue.value;invoke(SET_SHUTDOWN_ID,{hour:e}),DOM_ELEMENTS.clockStatus.checked=!0})),DOM_ELEMENTS.clockStatus.addEventListener("click",(()=>{if(DOM_ELEMENTS.clockStatus.checked){let e=DOM_ELEMENTS.clockValue.value;"STOP"!==e&&""!==e||(e="19:00"),invoke(SET_SHUTDOWN_ID,{hour:e}),DOM_ELEMENTS.clockValue.value=e}else invoke(SET_SHUTDOWN_ID,{hour:"STOP"}),DOM_ELEMENTS.clockValue.value="STOP"})),DOM_ELEMENTS.submitIntervalBtn.addEventListener("click",update_interval),DOM_ELEMENTS.intervalData.addEventListener("keypress",(async e=>{"Enter"===e.key&&(e.preventDefault(),DOM_ELEMENTS.submitIntervalBtn.click())}));