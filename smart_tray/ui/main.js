let invoke=window.__TAURI__.tauri["invoke"],INVALID_DATA_MESSAGE="Invalid data",LOADING_TEXT="Loading...",DEFAULT_SHUTDOWN_TIME="19:00",STOP_TIME="STOP",SUCCESSFUL_MESSAGE="SUCCESSFUL",SHUTDOWN_CLOCK_ID="plugin:general|get_shutdown_clock",SHUTDOWN_STATE_ID="plugin:general|get_shutdown_state",SET_SHUTDOWN_ID="plugin:general|set_shutdown",SET_FORCE_INTERVAL_ID="plugin:general|set_force_interval",SET_REGISTRY_STATE_ID="plugin:general|set_registry_state",GET_STATE_ID="plugin:general|get_state",DEFAULT_MINIMUM_INTERVAL=60,CHECKBOX_LIST=[["log-toggle","logging"]],CHECKBOX_SETTINGS_LIST=[["log-toggle","logging"]],DOM_ELEMENTS={clockValue:document.getElementById("timed-input"),clockStatus:document.getElementById("timed-stop"),intervalData:document.getElementById("interval-data"),submitIntervalBtn:document.getElementById("submit-interval-btn")},refreshTableList=[["robot-inputs","plugin:general|tauri_get_db_count"],["current-interval","plugin:general|get_data","force_interval"],["last-input","plugin:general|get_data","robot_input"]];function refreshStatsTable(){Promise.all(refreshTableList.map(refreshTableElement))}function refreshTableElement(t){document.getElementById(t[0]).innerText=LOADING_TEXT;let e;(e=void 0!==t[2]?invoke(t[1],{data:t[2]}):invoke(t[1])).then(e=>{document.getElementById(t[0]).innerText=e})}function refreshAllCheckboxes(){Promise.all(CHECKBOX_LIST.map(refreshCheckbox))}function refreshCheckbox(e){let t=document.getElementById(e[0]);t.checked=!1,invoke(GET_STATE_ID,{data:e[1]}).then(e=>{t.checked=e})}async function update_interval(){var e=DOM_ELEMENTS.intervalData;isNaN(e.value)||e.value<DEFAULT_MINIMUM_INTERVAL?(e.placeholder=INVALID_DATA_MESSAGE,e.value=""):(invoke(SET_FORCE_INTERVAL_ID,{interval:e.value}),e.placeholder=SUCCESSFUL_MESSAGE,e.value="",refreshStatsTable())}window.addEventListener("DOMContentLoaded",()=>{refreshStatsTable(),refreshAllCheckboxes(),invoke(SHUTDOWN_CLOCK_ID,{}).then(e=>DOM_ELEMENTS.clockValue.value=e),invoke(SHUTDOWN_STATE_ID,{}).then(e=>DOM_ELEMENTS.clockStatus.checked=e)}),DOM_ELEMENTS.clockValue.addEventListener("change",()=>{var e=DOM_ELEMENTS.clockValue.value;invoke(SET_SHUTDOWN_ID,{hour:e}),DOM_ELEMENTS.clockStatus.checked=!0}),DOM_ELEMENTS.clockStatus.addEventListener("click",()=>{if(DOM_ELEMENTS.clockStatus.checked){let e=DOM_ELEMENTS.clockValue.value;e!==STOP_TIME&&""!==e||(e=DEFAULT_SHUTDOWN_TIME),invoke(SET_SHUTDOWN_ID,{hour:e}),DOM_ELEMENTS.clockValue.value=e}else invoke(SET_SHUTDOWN_ID,{hour:STOP_TIME}),DOM_ELEMENTS.clockValue.value=STOP_TIME}),DOM_ELEMENTS.submitIntervalBtn.addEventListener("click",update_interval),DOM_ELEMENTS.intervalData.addEventListener("keypress",async e=>{"Enter"===e.key&&(e.preventDefault(),DOM_ELEMENTS.submitIntervalBtn.click())});for(let e of CHECKBOX_SETTINGS_LIST)setEventListener(e);function setEventListener(e){document.getElementById(e[0]).addEventListener("click",()=>{document.getElementById(e[0]).checked?invoke(SET_REGISTRY_STATE_ID,{data:e[1],wanted_status:!0}):invoke(SET_REGISTRY_STATE_ID,{data:e[1],wanted_status:!1})})}